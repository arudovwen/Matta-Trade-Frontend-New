# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

trigger:
- development

pool:
  vmImage: ubuntu-latest

# define variables to use during the build
variables:
  projectFolder: '$(System.DefaultWorkingDirectory)'
  buildOutputFolder: '.output/public'

# define the steps of the build
strategy:
  matrix:
    
    node_20_x:
      node_version: 20.x

steps:

- task: NodeTool@0
  inputs:
    versionSource: 'spec'
    versionSpec: '20.x'
- task: UseNode@1 
      
## Run the npm install/build
- script: |
    npm install
    npm run build
##    pushd $(projectFolder) && npm install && popd
##    pushd $(projectFolder) && npm run build && popd
##    pushd $(projectFolder) && npm run export
##pushd $(projectFolder) && npm install --save nuxt && popd

    
##    pushd $(projectFolder) && npm install --save nuxt && popd
##     pushd $(projectFolder) && npm run build && popd
## Copy the client to the staging directory


- task: CopyFiles@2
  inputs:
    sourceFolder: '$(buildOutputFolder)' 
    contents: '**/*' 
    targetFolder: '$(Build.ArtifactStagingDirectory)'
    cleanTargetFolder: true

## Archive the files into a zip file for publishing
- task: ArchiveFiles@2
  inputs:
    rootFolderOrFile: $(Build.ArtifactStagingDirectory)
    archiveType: 'zip'
    archiveFile: '$(Build.ArtifactStagingDirectory)/$(Build.BuildId).zip'
    includeRootFolder: false

## Publish the zip file
- task: PublishBuildArtifacts@1
  inputs:
    pathtoPublish: '$(Build.ArtifactStagingDirectory)/$(Build.BuildId).zip'